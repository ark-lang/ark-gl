#use gl
#use sdl

// C bindings
[c] func printf(fmt: str, ...) -> int;

func main() -> int {
	// create our C string
	y: []u8 = [u8('h'), u8('e'), u8('l'), u8('l'), u8('o'), 0];

	if (sdl::C::SDL_Init(sdl::SDL_INIT_EVERYTHING) < 0) {
		C::printf("SDL could not be initialized!\n");
	}

	sdl::C::SDL_GL_SetAttribute(sdl::SDL_GL_CONTEXT_MAJOR_VERSION, 3);
	sdl::C::SDL_GL_SetAttribute(sdl::SDL_GL_CONTEXT_MINOR_VERSION, 2);
	
	sdl::C::SDL_GL_SetAttribute(sdl::SDL_GL_RED_SIZE, 5);
	sdl::C::SDL_GL_SetAttribute(sdl::SDL_GL_GREEN_SIZE, 5);
	sdl::C::SDL_GL_SetAttribute(sdl::SDL_GL_BLUE_SIZE, 5);
	sdl::C::SDL_GL_SetAttribute(sdl::SDL_GL_DOUBLEBUFFER, 1);
	sdl::C::SDL_GL_SetAttribute(sdl::SDL_GL_DEPTH_SIZE, 16);

	// weird string hack
	window := sdl::C::SDL_CreateWindow(&y[0], sdl::SDL_WINDOWPOS_CENTERED, sdl::SDL_WINDOWPOS_CENTERED, 1280, 720, sdl::SDL_WINDOW_OPENGL);
	context := sdl::C::SDL_GL_CreateContext(window);

	sdl::C::SDL_GL_SetSwapInterval(1);

	gl::C::glMatrixMode(gl::GL_PROJECTION);
	gl::C::glLoadIdentity();
	gl::C::glOrtho(0, 1280, 720, 0, 1, 0 - 1);
	gl::C::glMatrixMode(gl::GL_MODELVIEW);

	gl::C::glClearColor(1.0, 1.0, 1.0, 1.0);
	for true {
		gl::C::glClear(gl::GL_COLOR_BUFFER_BIT);

		gl::C::glColor3f(0, 0, 0);
		gl::C::glBegin(gl::GL_QUADS); 
			gl::C::glVertex2f(0.0, 0.0);
			gl::C::glVertex2f(40.0, 0.0); 
			gl::C::glVertex2f(40.0, 40.0); 
			gl::C::glVertex2f(0.0, 40.0); 
		gl::C::glEnd();

		sdl::C::SDL_GL_SwapWindow(window);
	}

	sdl::C::SDL_GL_DeleteContext(context);
	sdl::C::SDL_DestroyWindow(window);
	sdl::C::SDL_Quit();

	return 0;
}