#link "glfw"

type GLFWwindow struct {};
type GLFWmonitor struct {};

GLFW_SAMPLES: C::int = 0x0002100D;
GLFW_CONTEXT_VERSION_MAJOR: C::int = 0x00022002;
GLFW_CONTEXT_VERSION_MINOR: C::int = 0x00022003;
GLFW_OPENGL_FORWARD_COMPAT: C::int = 0x00022006;
GLFW_OPENGL_PROFILE: C::int = 0x00022008;
GLFW_OPENGL_CORE_PROFILE: C::int = 0x00032001;
GLFW_KEY_ESCAPE: C::int = 256;
GLFW_STICKY_KEYS: C::int = 0x00033002;
GLFW_PRESS: C::int = 1;

// window
[c] func glfwWindowHint(target: C::int, hint: C::int);
[c] func glfwCreateWindow(width: C::int, height: C::int, title: str, monitor: ^GLFWmonitor, share: ^GLFWwindow) -> ^GLFWwindow;
[c] func glfwWindowShouldClose(window: ^GLFWwindow);
[c] func glfwPollEvents();
[c] func glfwSwapBuffers(window: ^GLFWwindow);
[c] func glfwDestroyWindow(window: ^GLFWwindow);

// rendering?
[c] func glfwMakeContextCurrent(context: ^GLFWwindow);
[c] func glfwGetFramebufferSize(window: ^GLFWwindow, width: ^int, height: ^int);
[c] func glfwGetTime() -> f64;

// input
[c] func glfwSetInputMode(context: ^GLFWwindow, mode: C::int, value: C::int) -> C::int;
[c] func glfwGetKey(window: ^GLFWwindow, key: C::int) -> C::int;

// misc
[c] func glfwTerminate();
[c] func glfwInit() -> C::int;
